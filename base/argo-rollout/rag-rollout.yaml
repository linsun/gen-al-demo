apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: rag
  namespace: default
spec:
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: rag
  template:
    metadata:
      labels:
        app: rag
    spec:
      serviceAccountName: rag
      containers:
      - name: rag
        image: docker.io/linsun/rag:v1  # You'll need to build and push this image to your registry
        imagePullPolicy: Always
        ports:
          - containerPort: 8000
        env:
          - name: OLLAMA_BASE_URL
            value: "http://host.docker.internal:11434"
            # value: "http://ollama:80"
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: CHROMA_SERVER_AUTH_CREDENTIALS
            value: "none"
          - name: CHROMA_SERVER_AUTH_PROVIDER
            value: "none"
        resources:
          requests:
            memory: "2Gi"
            cpu: "1"
          limits:
            memory: "4Gi"
            cpu: "2"
  strategy:
    canary:
      canaryService: rag-canary # our created canary service
      stableService: rag-stable # our created stable service
      #analysis:
      #  startingStep: 2   # index of step list, of when to start this analysis
      #  templates:
      #  - templateName: istio-success-rate
      #  args:             # arguments allow AnalysisTemplates to be re-used
      #  - name: service
      #    value: rag-canary
      #  - name: namespace
      #    valueFrom:
      #      fieldRef:
      #        fieldPath: metadata.namespace
      trafficRouting:
        managedRoutes:
        - name: "canary-header"
        plugins:
          argoproj-labs/gatewayAPI:
            httpRoute: rag-http-route
            namespace: default
      steps:
      - setWeight: 30
      - setHeaderRoute:
          name: "canary-header"
          match:
            - headerName: x-rollout-canary
              headerValue:
                exact: "true" 
      - pause: {}
      - setWeight: 60
      - pause: {duration: 30s}
      - setWeight: 100
      - pause: {duration: 30s}
